[
{
	"uri": "/elementanimationtoolkit/installation/",
	"title": "Installation",
	"tags": [],
	"description": "",
	"content": "   OpenUPM (Get openupm) Unity Package Manager      openupm add id.instance.elementanimationtoolkit\r\r https://github.com/instance-id/elementanimationtoolkit.git#upm        Usage Examples: Tools \u0026gt; instance.id \u0026gt; Element Animation Toolkit\nNote: The code is pretty heavily excessively documented and currently most method summaries for extension methods have examples in them. Be sure to check the comments for additional details!\n\r\rExample: Method IDE summary for \u0026#39;HoverColor()\r\r\r/// \u0026lt;summary\u0026gt; /// Adds forecolor hover capability that will not be lost like CSS:hover when programatically setting background color /// \u0026lt;/summary\u0026gt; /// \u0026lt;example\u0026gt; /// \u0026lt;code\u0026gt; /// var originalColor = GetColor.FromHex(\u0026#34;#BABABA\u0026#34;); /// var hoverColor = GetColor.FromHex(\u0026#34;#2F569C\u0026#34;); /// /// label.HoverColor(originalColor, hoverColor); /// \u0026lt;/code\u0026gt; /// \u0026lt;/example\u0026gt; \r\r   website |  twitter |  github |  issues\n"
},
{
	"uri": "/searcher/installation/",
	"title": "Installation",
	"tags": [],
	"description": "",
	"content": "Installation | Compatability Details Thanks for checking out Searcher. Below are the instructions to get you up and running.\nInstall   Extract/unzip \u0026lsquo;Searcher_\u0026lt;version\u0026gt;.zip\u0026rsquo;. (ex. Searcher_v0.1.0.zip) Inside will be a packages and Searcher folder as well as a README.md and a url link to this page.\nSearcher_v0.1.0.zip /\rSearcher_v0.1.0/__ /packages/\r|_ /Searcher/\r|__ README.md\r|__ Searcher_install_instructions.url\r  Move the Searcher folder somewhere permanent. It can be placed where ever you would like. Make note of the folder path, as it will be needed in a later step. Examples below:\n   OS Path (replace \u0026lt;user\u0026gt; with your actual username)      Windows: C:\\Users\\\u0026lt;user\u0026gt;\\houdini_addons\\Searcher    Linux: /home/\u0026lt;user\u0026gt;/houdini_addons/Searcher    MacOS: /Users/\u0026lt;user\u0026gt;/Library/h_addons/Searcher      Move the \u0026lsquo;packages\u0026rsquo; folder into your Houdini $HOME directory. The locations are seen below:\n   OS Path (replace \u0026lt;user\u0026gt; with your actual username)      Windows: C:\\Users\\\u0026lt;user\u0026gt;\\Documents\\houdini18.0\\packages\\Searcher.json    Linux: /home/\u0026lt;user\u0026gt;/houdini18.0/packages/Searcher.json    MacOS: /Users/\u0026lt;user\u0026gt;/Library/Preferences/houdini/18.0/packages/Searcher.json      Within the \u0026lsquo;packages\u0026rsquo; folder is the Searcher.json file. Open this file in your editor of choice and edit line #27. Within the second set of quotation marks input the path to the Searcher folder from step #2. On Windows, replace the backslashes (\\) in the path with a forwardslashs (/) Ex. If using Windows and following the example listed above, line 27 would look like this:\n \u0026quot;SEARCHERLOCATION\u0026quot;: \u0026quot;C:/Users/\u0026lt;user\u0026gt;/houdini_addons/Searcher\u0026quot;,\r  Save the file and start Houdini. On the main shelf toolbar add the Searcher shelf by clicking on the plus(+) button, then the Shelves tab, followed by selecting \u0026ldquo;Searcher Shelf\u0026rdquo; seen in the images below:\n                 You should now be able to hit the hotkey below to open the Searcher window:\nOpen Searcher Window: Ctrl+`\n  Notes Compatability:    Houdini Versions Tested     Houdini Version: 18.0.348 and up    Tested versions    OS Versions Tested     ‚äû Windows: Windows 10 Pro v10.0.19041.264 (v2004)   üêß Linux: Pop_OS! (Ubuntu) 19.04/19.10/20.04   üçé MacOS: Coming soon!      website |  twitter |  github |  issues\n"
},
{
	"uri": "/elementanimationtoolkit/",
	"title": "Element Animation Toolkit",
	"tags": [],
	"description": "",
	"content": "A collection of Unity UIElements animation extension methods, new animated elements, and examples.\r\r \rNote:\r\rUIElements Animations are listed as Experimental by Unity - API subject to change. Also, since Element Animation Toolkit is currently underactive development, it is possible for API changes in this library as well\r\rThe intent of this package is to help asset developers more easily create their own animation sequences via code.\nThough, I have been adding some new \u0026ldquo;ready to go\u0026rdquo; UIElement types, such as the \u0026ldquo;AnimatedFoldout\u0026rdquo;, which you just use as you would a a typical foldout comes animated with no additional coding, minus some exposed properties to adjust the animation to your liking. I do intend to add more of these as I go along.\nThis package began simply as a small collection of helpers methods I created across my last few projects to make animating editor elements much easier and finally put into a single place. I continue to add to it as I go along but decided to put together several examples and wanted to share them.\n  website |  twitter |  github |  issues\n"
},
{
	"uri": "/contact/",
	"title": "Contact",
	"tags": [],
	"description": "",
	"content": "Contact  \r#span-996755e9.cloaked-e-mail:before {\rcontent:attr(data-domain) \"\\0040\" attr(data-user);\runicode-bidi:bidi-override;\rdirection:rtl;\r}\r\r\u0026#32;\u0026#32;\rvar scriptTag = document.getElementById(\"script-996755e9\");\rvar link = document.createElement(\"a\");\rvar address = \"troppus\".split('').reverse().join('') + \"@\" + \"di.ecnatsni\".split('').reverse().join('');\rlink.href = \"mailto\" + \":\" + address;\rlink.innerText = address.split('?')[0];\rscriptTag.parentElement.insertBefore(link, scriptTag.previousElementSibling);\rscriptTag.parentElement.removeChild(scriptTag.previousElementSibling)\r\r  Element Animation Toolkit  Bugs Feature Request Suggestions  Searcher  Bugs Feature Request Suggestions  "
},
{
	"uri": "/searcher/",
	"title": "Searcher",
	"tags": [],
	"description": "",
	"content": "instance.id Searcher brings the ‚ÄúSearch Everything‚Äù functionality found in many modern Content Creation Suites and IDE‚Äôs such as JetBrains ‚ÄòShift+Shift‚Äô search (PyCharm, Rider, Webstorm, etc), Blender, Maya, and many others, to Houdini.\n  Quickly locate and execute any menu item or hotkeyable action without the need to assign, memorize, or manage hotkeys.\n\r   View available actions for windows and panes on mouse-over\n\r   Greatly increase productivity. Spend less time trying to locate nested menu items or remembering hundreds of hotkeys\n  Optimized for responsiveness. Utilizes libraries written in C to maximize speed\n  Search for any available native or 3rd party menu items or actions. Locates available 3rd party menus/actions/hotkeys\n  Fuzzy, abbreviated, partial search via FTS5 engine. Ex. Quickly locate \u0026ldquo;External Tool Preferences\u0026rdquo; by typing \u0026ldquo;ex to pre\u0026rdquo;\n  Show all available actions for windows/panes/contexts. Mouseover a window and press hotkey to display the available actions/hotkeys\n  Open menu items/trigger actions from the Searcher window. Execute available actions even if they don\u0026rsquo;t have a hotkey assigned\n  Feature requests welcome and encouraged! If you think Searcher could benefit from an additional feature, let us know!\n  Compatibility notes Tested versions    OS Version     Windows: Windows 10 Pro v10.0.19041.264 (v2004)   Linux: Pop_OS! (Ubuntu) 19.04/19.10/20.04   MacOS: Coming soon!    \rRequires: Houdini 18.0.348 and up\n\r(Can look into supporting older versions if requested. It is unknown at this point if there are any technical limitations.)\nCurrent Version: v0.1.1\n  website |  twitter |  github |  issues\n"
},
{
	"uri": "/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "instance.id Welcome to the instance.id wiki   website |  twitter |  github\n"
},
{
	"uri": "/elementanimationtoolkit/examples/",
	"title": "Examples",
	"tags": [],
	"description": "",
	"content": "    Background Color Fade-In        (The initial fade from gray to blue)    \r\rExample animation base helper: AnimateBackgroundColor()\r\r\rColor originalColor = GetColor.FromHex(\u0026#34;#BABABA\u0026#34;); Color fadeColor = GetColor.FromHex(\u0026#34;#2F569C\u0026#34;); var durationOfFade = 250; // In milliseconds  VisualElement visualElement = new VisualElement(); visualElement.AnimateBackgroundColor(originalColor, fadeColor, durationOfFade); \r\r      Hover Border Pulse            \r\rExample hover animation: HoverBorderPulse()\r\r\rVisualElement visualElement = new VisualElement(); visualElement.HoverBorderPulse(pulseStartColor: GetColor.FromHex(\u0026#34;#7F3B3A\u0026#34;), pulseEndColor: GetColor.FromHex(\u0026#34;#2F569C\u0026#34;), colorDuration: 500); \r\r      Fade-in sequence            \r\rExample complex animation sequence: AnimFadeInSequence()\r\r\rLabel label = new Label {text = \u0026#34;Click button to make me fade!\u0026#34;}; const int fadeInTime = 500; const float displayTime = 2000f; const int fadeOutTime = 500; string newText = \u0026#34;then back to the original!\u0026#34;; var originalTextColor = GetColor.FromHex(\u0026#34;#BABABA\u0026#34;); var animatedTextColor = GetColor.FromHex(\u0026#34;#607FAE\u0026#34;); label.AnimFadeInSequence(newText, animatedTextColor, originalTextColor, fadeInTime, displayTime, fadeOutTime); \r\r  Then, of course, there is everything in between.\nHeler Methods Additionally there are many helper methods relating to many different Types from Color to opening weblinks in the browser.\n\r\rExample color helper method: GetColor.FromHex()\r\r\rUsage:\nColor color = GetColor.FromHex(\u0026#34;#CCCCCC\u0026#34;); Implementation:\npublic static Color FromHex(this string color) { if (!color.StartsWith(\u0026#34;#\u0026#34;)) Debug.LogWarning(\u0026#34;The FromHex() function must be used on a hexadecimal string beginning with #\u0026#34;); ColorUtility.TryParseHtmlString(color, out var outColor); return outColor; } \r\r  \r\rExample creating an external url link : OpenURL()\r\r\rUsage:\nVisualElement visualElement = new VisualElement(); visualElement.OpenURL(\u0026#34;https://github.com/instance-id/ElementAnimationToolkit\u0026#34;); Implementation:\npublic static T OpenURL\u0026lt;T\u0026gt;(this T element, string url) where T : VisualElement { element.RegisterCallback\u0026lt;MouseUpEvent\u0026gt;(evt =\u0026gt; { if (evt.button == 0) { Application.OpenURL(url); evt.StopPropagation(); } }); return element; } \r\r   website |  twitter |  github |  issues\n"
},
{
	"uri": "/elementanimationtoolkit/usage/",
	"title": "Usage",
	"tags": [],
	"description": "",
	"content": "Important files:\nAssets/instance.id/ElementAnimationToolkit/Editor/EATKEditor.cs\r This file is the primary example and demonstrative reference for most major features and is the main editor window of the package where you can view examples of several different types of animations and their usage.\nYou can access the main editor window via Tools \u0026gt; instance.id \u0026gt; Element Animation Toolkit\nThere are three buttons per row, Editor, Anim, and USS.\nThe editor button will take you directly to the editor code specific to that element where you will see the C# implementation of UIElements as well as most callback registrations.\nThe Anim button takes you to another section of the file in which you can see the declaration, setup, and execution of any animation specific functions,\nLastly is the USS button, which takes you to the USS stylesheet and the location of the particular animation if you need.\nThe animations without a row of buttons have a right-click context menu implemented which has similar options to jump directly into the code at the proper location for the animation. (The methods I have created for jumping straight to the proper lines of code are of course included and you are welcome to take advantage of them for your own needs.)\n\r\r\r\rJumpToCode \r\r\r\r\r\r\r \r\r\r\r\r\r\r\r  website |  twitter |  github |  issues\n"
},
{
	"uri": "/searcher/changelog/",
	"title": "Change Log",
	"tags": [],
	"description": "",
	"content": "v0.1.1 \r\r06/30/2020\r\r\rNew Features  Initial release!  Bug Fixes  NA  \r   website |  twitter |  github |  issues\n"
},
{
	"uri": "/searcher/issues/",
	"title": "Issues",
	"tags": [],
	"description": "",
	"content": "Searcher  Bugs Feature Request Suggestions  Contact  \r#span-50cc829b.cloaked-e-mail:before {\rcontent:attr(data-domain) \"\\0040\" attr(data-user);\runicode-bidi:bidi-override;\rdirection:rtl;\r}\r\r\u0026#32;\u0026#32;\rvar scriptTag = document.getElementById(\"script-50cc829b\");\rvar link = document.createElement(\"a\");\rvar address = \"troppus\".split('').reverse().join('') + \"@\" + \"di.ecnatsni\".split('').reverse().join('');\rlink.href = \"mailto\" + \":\" + address;\rlink.innerText = address.split('?')[0];\rscriptTag.parentElement.insertBefore(link, scriptTag.previousElementSibling);\rscriptTag.parentElement.removeChild(scriptTag.previousElementSibling)\r\r    website |  twitter |  github |  issues\n"
},
{
	"uri": "/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]